{"version":3,"file":"main.0b00f3dffa7f1dc0f590.bundle.js","sources":["webpack:///./src/scroll.js"],"sourcesContent":["// @flow\nlet isMonitoring: boolean = false\nlet isScrolling: boolean = false\nlet watchers: Set<Function> = new Set()\n\nfunction onScroll(e) {\n  if (!isScrolling) {\n    isScrolling = true\n    requestAnimationFrame(update)\n  }\n}\n\nfunction update() {\n  isScrolling = false\n  watchers.forEach(cb => cb())\n}\n\nfunction start() {\n  if (!isMonitoring) {\n    window.addEventListener('scroll', onScroll)\n    window.addEventListener('resize', onScroll)\n    isMonitoring = true\n  }\n}\n\nfunction stop() {\n  if (isMonitoring) {\n    watchers.clear()\n    window.removeEventListener('scroll', onScroll)\n    window.removeEventListener('resize', onScroll)\n    isMonitoring = false\n  }\n}\n\nexport function watch(cb: Function) {\n  if (!isMonitoring) start()\n  watchers.add(cb)\n}\n\nexport function unwatch(cb: Function) {\n  watchers.delete(cb)\n  if (!watchers.size) stop()\n}\n\nexport function destroy() {\n  stop()\n}\n"],"mappings":"AACA","sourceRoot":""}